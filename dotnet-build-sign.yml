name: Build, Test, and Sign .NET Project

on:
push:
branches:
- main
pull_request:
branches:
- main

jobs:
build-and-sign:
runs-on: windows-latest

steps:
# 1. Repository auschecken
- name: Checkout repository
uses: actions/checkout@v3

# 2. .NET SDK einrichten
- name: Setup .NET
uses: actions/setup-dotnet@v3
with:
dotnet-version: 4.8 

# 3. Abhängigkeiten wiederherstellen
- name: Restore dependencies
run: dotnet restore

# 4. Tests ausführen
- name: Run Tests
run: dotnet test --no-build --verbosity normal

# 5. Projekt bauen und veröffentlichen
- name: Build and publish EXE
run: |
dotnet publish -c Release -r win-x64 --self-contained -o output

# 6. Zertifikat entschlüsseln (aus GitHub Secret)
- name: Decrypt certificate
run: |
echo "${{ secrets.CERTIFICATE_PFX }}" | base64 -d > cert.pfx

# 7. Signiere die EXE-Datei
- name: Sign EXE file
run: |
"C:\Program Files (x86)\Windows Kits\10\bin\x64\signtool.exe" sign /f cert.pfx /p "${{ secrets.CERTIFICATE_PASSWORD }}" /t http://timestamp.digicert.com output\Autodatenbank.exe

# 8. Artefakte hochladen (Optional)
- name: Upload Signed EXE
uses: actions/upload-artifact@v3
with:
name: signed-exe
path: output
